/gpfs/mariana/home/akkusu/TBT-practice/TBT-for-VGG-nobias-quantized.py:301: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if attack_method is 'fgsm':
/gpfs/mariana/home/akkusu/TBT-practice/TBT-for-VGG-nobias-quantized.py:303: SyntaxWarning: "is" with a literal. Did you mean "=="?
  elif attack_method is 'pgd':
/gpfs/mariana/home/akkusu/TBT-practice/TBT-for-VGG-nobias-quantized.py:313: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if attack_method is 'fgsm':
/gpfs/mariana/home/akkusu/TBT-practice/TBT-for-VGG-nobias-quantized.py:240: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vgg_weights = torch.load('vgg16-quantized-nobias--181-best.pth')
==> Preparing data..
==> Preparing data..
Files already downloaded and verified
Files already downloaded and verified
Sequential(
  (0): Normalize_layer()
  (1): VGG(
    (features): Sequential(
      (0): quantized_conv(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): quantized_conv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (7): quantized_conv(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): ReLU(inplace=True)
      (10): quantized_conv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): ReLU(inplace=True)
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): quantized_conv(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): ReLU(inplace=True)
      (17): quantized_conv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): ReLU(inplace=True)
      (20): quantized_conv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): ReLU(inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (24): quantized_conv(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (29): ReLU(inplace=True)
      (30): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (32): ReLU(inplace=True)
      (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (34): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (36): ReLU(inplace=True)
      (37): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (39): ReLU(inplace=True)
      (40): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (42): ReLU(inplace=True)
      (43): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (classifier): Sequential(
      (0): quantized_linear(in_features=512, out_features=4096, bias=False)
      (1): ReLU(inplace=True)
      (2): Dropout(p=0.5, inplace=False)
      (3): quantized_linear(in_features=4096, out_features=4096, bias=False)
      (4): ReLU(inplace=True)
      (5): Dropout(p=0.5, inplace=False)
      (6): quantized_linear(in_features=4096, out_features=10, bias=False)
    )
  )
)
Sequential(
  (0): Normalize_layer()
  (1): VGG_Partial(
    (features): Sequential(
      (0): quantized_conv(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): quantized_conv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (7): quantized_conv(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): ReLU(inplace=True)
      (10): quantized_conv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): ReLU(inplace=True)
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): quantized_conv(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): ReLU(inplace=True)
      (17): quantized_conv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): ReLU(inplace=True)
      (20): quantized_conv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): ReLU(inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (24): quantized_conv(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (29): ReLU(inplace=True)
      (30): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (32): ReLU(inplace=True)
      (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (34): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (36): ReLU(inplace=True)
      (37): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (39): ReLU(inplace=True)
      (40): quantized_conv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (42): ReLU(inplace=True)
      (43): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (partial_classifier): Sequential(
      (0): quantized_linear(in_features=512, out_features=4096, bias=False)
      (1): ReLU(inplace=True)
      (2): Dropout(p=0.5, inplace=False)
      (3): quantized_linear(in_features=4096, out_features=4096, bias=False)
      (4): ReLU(inplace=True)
      (5): Dropout(p=0.5, inplace=False)
    )
  )
)
CUDA ensabled.
torch.Size([4096, 512])
1
torch.Size([4096, 4096])
2
torch.Size([10, 4096])
3
tensor([[ 888, 2879,  324,  ..., 2397, 3458, 1211],
        [ 888, 2879,  446,  ..., 4079, 3805, 2223],
        [ 888, 2146, 1628,  ..., 2076,  884,  121],
        ...,
        [1035, 1525, 2929,  ..., 2696, 3317, 1259],
        [1593,  882,  478,  ..., 1561, 1063, 1773],
        [2879,  446, 2576,  ..., 1497, 1771,  424]], device='cuda:0')
9
tensor([2879,  446, 2576,  888,    1,  434,  324, 3117,  415, 1616, 2730,  459,
         183, 1871, 3690, 3912, 3991, 3631, 3414, 3038,  205, 2167, 3926,  516,
        3326, 2571, 3992,  841, 2811, 2602, 3937, 2499,  293, 1343, 2089,  336,
        3440, 3263, 1296,  549, 1404, 2438,  257, 2463, 1536, 1304, 3489,  658,
        3586, 1665, 1648, 3807,  161, 2208, 1741, 2831,  211,  285,   76,  263,
        1937, 1493,  308, 1743,  217, 3626, 3713,  733,   94, 1534, 4081,  711,
        1557,  457, 4082, 3638, 3554, 3459, 3484, 1505, 2013,  296, 1240, 2941,
        1211, 3186,  986, 1685, 1469, 2280, 1148, 2821, 3055,  208,   53,  871,
        2685, 3111, 1321, 1318, 3126, 1273,  594,  626, 1897, 2426,  504, 1096,
        3705,  899, 3560, 3995, 1141,  169, 2353, 3970, 1264,  861, 3002, 2652,
        3755, 3870, 1270, 3309, 2171, 1912, 2365, 4079,   88, 1208,  983, 2181,
          93, 2444, 1468, 1576,  705,  451, 3479, 2223, 2708, 3026,  467, 3135,
        3154, 2972, 3054, 1497, 1771,  424], device='cuda:0')
150
value y is tensor([[0.2474, 0.0000, 0.0000,  ..., 0.0882, 0.0000, 0.0000]],
       device='cuda:0', grad_fn=<NativeDropoutBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9995.4219, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.9551, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.8379, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4375, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.8447, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4424, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7031, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7812, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7461, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4268, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3682, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2842, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3242, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3574, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.6250, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5322, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1641, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2168, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1738, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6279, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1855, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2900, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5957, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1914, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6123, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3633, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1436, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3174, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0928, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2393, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5986, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1348, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1904, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2451, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2451, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1885, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0918, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4531, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2666, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1797, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2354, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.9199, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7451, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6924, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0908, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1016, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2275, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9902, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0957, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2832, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4570, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1865, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5537, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1016, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2422, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6094, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0615, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1348, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0615, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.8203, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3027, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4404, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2520, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2139, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0967, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.0049, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4150, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0723, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9785, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2080, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5615, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3154, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8643, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.1787, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5713, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1787, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6670, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7109, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5156, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0771, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5166, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3320, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1973, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.9814, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4502, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2646, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1953, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6816, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3105, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.9385, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1807, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.5801, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2344, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4658, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5303, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8643, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5967, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7158, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7637, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2305, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.9668, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.2188, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8906, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5137, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.0098, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8428, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2852, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.9365, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7441, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.3174, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.2480, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.0703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2471, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8906, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2314, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.1699, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3350, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7070, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2119, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3057, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.8828, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4736, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.0771, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3438, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1387, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2148, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3818, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1367, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3789, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2930, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1338, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2500, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5186, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5283, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4668, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.9482, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3633, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3555, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2568, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3174, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2520, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2402, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4180, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.2314, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2803, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6689, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5723, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5674, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.3623, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7402, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.2188, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4053, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4307, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5439, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2217, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4941, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4268, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4072, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0957, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.9141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3516, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6865, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3135, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2158, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5098, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0654, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3037, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0635, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6055, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.0654, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1592, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1621, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.5557, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.6289, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.7402, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3770, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.0186, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2002, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.4834, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4814, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3525, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.2871, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.3535, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9994.1084, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4697, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9993.1504, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9873, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9697, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8887, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.9219, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8115, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8408, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8252, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8477, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7861, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8135, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7334, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.8398, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7119, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7627, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7021, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7344, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7334, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7471, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7002, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7207, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7139, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6572, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7002, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7305, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6621, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7432, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6719, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7373, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6758, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6465, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6885, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5820, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6514, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6865, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7305, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6201, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6816, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6299, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6670, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6221, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6279, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6289, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6377, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5820, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.7002, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5586, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6797, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6006, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6289, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5723, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6016, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6924, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5928, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5918, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6387, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5518, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6328, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6562, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5605, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6387, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5957, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6807, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5771, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6533, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5801, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6406, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5771, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6504, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6445, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6572, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6465, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5635, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6367, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6406, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6152, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6367, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6299, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6318, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6055, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5889, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6133, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6748, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6299, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5439, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5654, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5557, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6123, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5537, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5938, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6104, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6396, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5820, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6270, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6309, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5469, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6250, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6035, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6172, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5967, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6406, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6035, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6455, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6250, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5889, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6523, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6299, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5576, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6289, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5723, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5938, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6484, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6035, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6406, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5850, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5625, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5684, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6279, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5820, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5967, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5898, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5371, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6064, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5244, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6152, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5664, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5166, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6006, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5889, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6484, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5869, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6338, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6143, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5820, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5879, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6279, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5986, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6143, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5605, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6533, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5889, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6191, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6670, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5957, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6318, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5703, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6221, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5664, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6055, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6182, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6104, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6191, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5967, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6670, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5801, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6660, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6240, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5420, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6641, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5439, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6152, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5723, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6924, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5605, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5781, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6631, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5938, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6582, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5693, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5801, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6484, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5869, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6123, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6064, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6592, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5322, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6562, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5615, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6455, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5615, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.6758, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5986, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5518, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5254, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.5068, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4912, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4805, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4717, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4639, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4570, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4502, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4482, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4463, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4434, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4404, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4385, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4414, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4395, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4404, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4365, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4365, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4365, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4365, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4355, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4336, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4355, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4326, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4336, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4316, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4316, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4316, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4316, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4316, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4307, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4307, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4287, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4287, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4297, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4287, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4277, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4268, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4258, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4258, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4268, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4238, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4258, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4219, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4248, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4209, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4238, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4209, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4219, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4199, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4180, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4189, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4170, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4150, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4141, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4131, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4121, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4111, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4102, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4092, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4072, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4072, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4072, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4072, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4082, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4062, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4053, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4033, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4033, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4033, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4023, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4014, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.4004, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3994, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3984, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3975, device='cuda:0', grad_fn=<MseLossBackward0>)
Output shape: torch.Size([1, 4096])
Target shape: torch.Size([1, 4096])
tar (indices): [2879  446 2576  888    1  434  324 3117  415 1616 2730  459  183 1871
 3690 3912 3991 3631 3414 3038  205 2167 3926  516 3326 2571 3992  841
 2811 2602 3937 2499  293 1343 2089  336 3440 3263 1296  549 1404 2438
  257 2463 1536 1304 3489  658 3586 1665 1648 3807  161 2208 1741 2831
  211  285   76  263 1937 1493  308 1743  217 3626 3713  733   94 1534
 4081  711 1557  457 4082 3638 3554 3459 3484 1505 2013  296 1240 2941
 1211 3186  986 1685 1469 2280 1148 2821 3055  208   53  871 2685 3111
 1321 1318 3126 1273  594  626 1897 2426  504 1096 3705  899 3560 3995
 1141  169 2353 3970 1264  861 3002 2652 3755 3870 1270 3309 2171 1912
 2365 4079   88 1208  983 2181   93 2444 1468 1576  705  451 3479 2223
 2708 3026  467 3135 3154 2972 3054 1497 1771  424]
Output dtype: torch.float32
Target dtype: torch.float32
tensor(9992.3965, device='cuda:0', grad_fn=<MseLossBackward0>)
Index: 1, Layer: 1.classifier.6, Shape: torch.Size([3, 1, 1])
Index: 2, Layer: 1.classifier.6, Shape: torch.Size([3, 1, 1])
Index: 3, Layer: 1.classifier.6, Shape: torch.Size([64, 3, 3, 3])
Index: 4, Layer: 1.classifier.6, Shape: torch.Size([64])
Index: 5, Layer: 1.classifier.6, Shape: torch.Size([64])
Index: 6, Layer: 1.classifier.6, Shape: torch.Size([64, 64, 3, 3])
Index: 7, Layer: 1.classifier.6, Shape: torch.Size([64])
Index: 8, Layer: 1.classifier.6, Shape: torch.Size([64])
Index: 9, Layer: 1.classifier.6, Shape: torch.Size([128, 64, 3, 3])
Index: 10, Layer: 1.classifier.6, Shape: torch.Size([128])
Index: 11, Layer: 1.classifier.6, Shape: torch.Size([128])
Index: 12, Layer: 1.classifier.6, Shape: torch.Size([128, 128, 3, 3])
Index: 13, Layer: 1.classifier.6, Shape: torch.Size([128])
Index: 14, Layer: 1.classifier.6, Shape: torch.Size([128])
Index: 15, Layer: 1.classifier.6, Shape: torch.Size([256, 128, 3, 3])
Index: 16, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 17, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 18, Layer: 1.classifier.6, Shape: torch.Size([256, 256, 3, 3])
Index: 19, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 20, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 21, Layer: 1.classifier.6, Shape: torch.Size([256, 256, 3, 3])
Index: 22, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 23, Layer: 1.classifier.6, Shape: torch.Size([256])
Index: 24, Layer: 1.classifier.6, Shape: torch.Size([512, 256, 3, 3])
Index: 25, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 26, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 27, Layer: 1.classifier.6, Shape: torch.Size([512, 512, 3, 3])
Index: 28, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 29, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 30, Layer: 1.classifier.6, Shape: torch.Size([512, 512, 3, 3])
Index: 31, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 32, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 33, Layer: 1.classifier.6, Shape: torch.Size([512, 512, 3, 3])
Index: 34, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 35, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 36, Layer: 1.classifier.6, Shape: torch.Size([512, 512, 3, 3])
Index: 37, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 38, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 39, Layer: 1.classifier.6, Shape: torch.Size([512, 512, 3, 3])
Index: 40, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 41, Layer: 1.classifier.6, Shape: torch.Size([512])
Index: 42, Layer: 1.classifier.6, Shape: torch.Size([4096, 512])
Index: 43, Layer: 1.classifier.6, Shape: torch.Size([4096, 4096])
Index: 44, Layer: 1.classifier.6, Shape: torch.Size([10, 4096])
/gpfs/mariana/home/akkusu/TBT-practice/adversarialbox/utils.py:37: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  return Variable(x, requires_grad=requires_grad, volatile=volatile)
Got 9368/10000 correct (93.68%) on the clean data
/gpfs/mariana/home/akkusu/311env/lib64/python3.11/site-packages/torch/optim/lr_scheduler.py:224: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn(
Got 804/10000 correct (8.04%) on the clean data
Starting epoch 1 / 200
tensor(3.8967, device='cuda:0')
Starting epoch 2 / 200
tensor(3.9683, device='cuda:0')
Starting epoch 3 / 200
tensor(2.6814, device='cuda:0')
Starting epoch 4 / 200
tensor(3.7585, device='cuda:0')
Starting epoch 5 / 200
tensor(5.0189, device='cuda:0')
Starting epoch 6 / 200
tensor(2.5990, device='cuda:0')
Starting epoch 7 / 200
tensor(3.2955, device='cuda:0')
Starting epoch 8 / 200
tensor(3.5973, device='cuda:0')
Starting epoch 9 / 200
tensor(1.7056, device='cuda:0')
Starting epoch 10 / 200
tensor(2.2920, device='cuda:0')
Starting epoch 11 / 200
tensor(2.4500, device='cuda:0')
Starting epoch 12 / 200
tensor(0.8727, device='cuda:0')
Starting epoch 13 / 200
tensor(2.6915, device='cuda:0')
Starting epoch 14 / 200
tensor(1.8108, device='cuda:0')
Starting epoch 15 / 200
tensor(0.5647, device='cuda:0')
Starting epoch 16 / 200
tensor(0.8943, device='cuda:0')
Starting epoch 17 / 200
tensor(1.2887, device='cuda:0')
Starting epoch 18 / 200
tensor(1.4738, device='cuda:0')
Starting epoch 19 / 200
tensor(1.4738, device='cuda:0')
Starting epoch 20 / 200
tensor(1.3478, device='cuda:0')
Starting epoch 21 / 200
tensor(1.0860, device='cuda:0')
Starting epoch 22 / 200
tensor(0.7167, device='cuda:0')
Starting epoch 23 / 200
tensor(0.3654, device='cuda:0')
Starting epoch 24 / 200
tensor(0.7427, device='cuda:0')
Starting epoch 25 / 200
tensor(0.8989, device='cuda:0')
Starting epoch 26 / 200
tensor(0.6015, device='cuda:0')
Starting epoch 27 / 200
tensor(0.4599, device='cuda:0')
Starting epoch 28 / 200
tensor(0.5896, device='cuda:0')
Starting epoch 29 / 200
tensor(0.6094, device='cuda:0')
Starting epoch 30 / 200
tensor(0.5246, device='cuda:0')
Starting epoch 31 / 200
tensor(0.4097, device='cuda:0')
Starting epoch 32 / 200
tensor(0.4670, device='cuda:0')
Starting epoch 33 / 200
tensor(0.5559, device='cuda:0')
Starting epoch 34 / 200
tensor(0.4317, device='cuda:0')
Starting epoch 35 / 200
tensor(0.3797, device='cuda:0')
Starting epoch 36 / 200
tensor(0.4072, device='cuda:0')
Starting epoch 37 / 200
tensor(0.4035, device='cuda:0')
Starting epoch 38 / 200
tensor(0.3590, device='cuda:0')
Starting epoch 39 / 200
tensor(0.3304, device='cuda:0')
Starting epoch 40 / 200
tensor(0.3730, device='cuda:0')
Starting epoch 41 / 200
tensor(0.3277, device='cuda:0')
Starting epoch 42 / 200
tensor(0.3005, device='cuda:0')
Starting epoch 43 / 200
tensor(0.3143, device='cuda:0')
Starting epoch 44 / 200
tensor(0.3161, device='cuda:0')
Starting epoch 45 / 200
tensor(0.2799, device='cuda:0')
Starting epoch 46 / 200
tensor(0.2950, device='cuda:0')
Starting epoch 47 / 200
tensor(0.3030, device='cuda:0')
Starting epoch 48 / 200
tensor(0.2652, device='cuda:0')
Starting epoch 49 / 200
tensor(0.2719, device='cuda:0')
Starting epoch 50 / 200
tensor(0.2696, device='cuda:0')
Got 8251/10000 correct (82.51%) on the clean data
Got 8609/10000 correct (86.09%) on the clean data
Starting epoch 51 / 200
tensor(0.2621, device='cuda:0')
Starting epoch 52 / 200
tensor(0.2577, device='cuda:0')
Starting epoch 53 / 200
tensor(0.2501, device='cuda:0')
Starting epoch 54 / 200
tensor(0.2552, device='cuda:0')
Starting epoch 55 / 200
tensor(0.2432, device='cuda:0')
Starting epoch 56 / 200
tensor(0.2332, device='cuda:0')
Starting epoch 57 / 200
tensor(0.2322, device='cuda:0')
Starting epoch 58 / 200
tensor(0.2302, device='cuda:0')
Starting epoch 59 / 200
tensor(0.2217, device='cuda:0')
Starting epoch 60 / 200
tensor(0.2266, device='cuda:0')
Starting epoch 61 / 200
tensor(0.2212, device='cuda:0')
Starting epoch 62 / 200
tensor(0.2126, device='cuda:0')
Starting epoch 63 / 200
tensor(0.2164, device='cuda:0')
Starting epoch 64 / 200
tensor(0.2121, device='cuda:0')
Starting epoch 65 / 200
tensor(0.2070, device='cuda:0')
Starting epoch 66 / 200
tensor(0.2111, device='cuda:0')
Starting epoch 67 / 200
tensor(0.2074, device='cuda:0')
Starting epoch 68 / 200
tensor(0.2034, device='cuda:0')
Starting epoch 69 / 200
tensor(0.2080, device='cuda:0')
Starting epoch 70 / 200
tensor(0.2018, device='cuda:0')
Starting epoch 71 / 200
tensor(0.1993, device='cuda:0')
Starting epoch 72 / 200
tensor(0.1993, device='cuda:0')
Starting epoch 73 / 200
tensor(0.1945, device='cuda:0')
Starting epoch 74 / 200
tensor(0.1958, device='cuda:0')
Starting epoch 75 / 200
tensor(0.1937, device='cuda:0')
Starting epoch 76 / 200
tensor(0.1917, device='cuda:0')
Starting epoch 77 / 200
tensor(0.1923, device='cuda:0')
Starting epoch 78 / 200
tensor(0.1889, device='cuda:0')
Starting epoch 79 / 200
tensor(0.1894, device='cuda:0')
Starting epoch 80 / 200
tensor(0.1887, device='cuda:0')
Starting epoch 81 / 200
tensor(0.1880, device='cuda:0')
Starting epoch 82 / 200
tensor(0.1872, device='cuda:0')
Starting epoch 83 / 200
tensor(0.1865, device='cuda:0')
Starting epoch 84 / 200
tensor(0.1862, device='cuda:0')
Starting epoch 85 / 200
tensor(0.1865, device='cuda:0')
Starting epoch 86 / 200
tensor(0.1868, device='cuda:0')
Starting epoch 87 / 200
tensor(0.1868, device='cuda:0')
Starting epoch 88 / 200
tensor(0.1862, device='cuda:0')
Starting epoch 89 / 200
tensor(0.1860, device='cuda:0')
Starting epoch 90 / 200
tensor(0.1857, device='cuda:0')
Starting epoch 91 / 200
tensor(0.1859, device='cuda:0')
Starting epoch 92 / 200
tensor(0.1856, device='cuda:0')
Starting epoch 93 / 200
tensor(0.1855, device='cuda:0')
Starting epoch 94 / 200
tensor(0.1854, device='cuda:0')
Starting epoch 95 / 200
tensor(0.1851, device='cuda:0')
Starting epoch 96 / 200
tensor(0.1849, device='cuda:0')
Starting epoch 97 / 200
tensor(0.1848, device='cuda:0')
Starting epoch 98 / 200
tensor(0.1852, device='cuda:0')
Starting epoch 99 / 200
tensor(0.1851, device='cuda:0')
Starting epoch 100 / 200
tensor(0.1847, device='cuda:0')
Got 8678/10000 correct (86.78%) on the clean data
Got 8318/10000 correct (83.18%) on the clean data
Starting epoch 101 / 200
tensor(0.1846, device='cuda:0')
Starting epoch 102 / 200
tensor(0.1842, device='cuda:0')
Starting epoch 103 / 200
tensor(0.1845, device='cuda:0')
Starting epoch 104 / 200
tensor(0.1845, device='cuda:0')
Starting epoch 105 / 200
tensor(0.1841, device='cuda:0')
Starting epoch 106 / 200
tensor(0.1840, device='cuda:0')
Starting epoch 107 / 200
tensor(0.1838, device='cuda:0')
Starting epoch 108 / 200
tensor(0.1838, device='cuda:0')
Starting epoch 109 / 200
tensor(0.1838, device='cuda:0')
Starting epoch 110 / 200
tensor(0.1836, device='cuda:0')
Starting epoch 111 / 200
tensor(0.1836, device='cuda:0')
Starting epoch 112 / 200
tensor(0.1835, device='cuda:0')
Starting epoch 113 / 200
tensor(0.1832, device='cuda:0')
Starting epoch 114 / 200
tensor(0.1832, device='cuda:0')
Starting epoch 115 / 200
tensor(0.1832, device='cuda:0')
Starting epoch 116 / 200
tensor(0.1831, device='cuda:0')
Starting epoch 117 / 200
tensor(0.1831, device='cuda:0')
Starting epoch 118 / 200
tensor(0.1829, device='cuda:0')
Starting epoch 119 / 200
tensor(0.1827, device='cuda:0')
Starting epoch 120 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 121 / 200
tensor(0.1827, device='cuda:0')
Starting epoch 122 / 200
tensor(0.1827, device='cuda:0')
Starting epoch 123 / 200
tensor(0.1827, device='cuda:0')
Starting epoch 124 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 125 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 126 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 127 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 128 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 129 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 130 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 131 / 200
tensor(0.1826, device='cuda:0')
Starting epoch 132 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 133 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 134 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 135 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 136 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 137 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 138 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 139 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 140 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 141 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 142 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 143 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 144 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 145 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 146 / 200
tensor(0.1825, device='cuda:0')
Starting epoch 147 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 148 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 149 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 150 / 200
tensor(0.1824, device='cuda:0')
Got 8655/10000 correct (86.55%) on the clean data
Got 8336/10000 correct (83.36%) on the clean data
Starting epoch 151 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 152 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 153 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 154 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 155 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 156 / 200
tensor(0.1824, device='cuda:0')
Starting epoch 157 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 158 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 159 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 160 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 161 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 162 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 163 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 164 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 165 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 166 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 167 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 168 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 169 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 170 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 171 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 172 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 173 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 174 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 175 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 176 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 177 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 178 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 179 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 180 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 181 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 182 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 183 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 184 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 185 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 186 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 187 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 188 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 189 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 190 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 191 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 192 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 193 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 194 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 195 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 196 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 197 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 198 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 199 / 200
tensor(0.1823, device='cuda:0')
Starting epoch 200 / 200
tensor(0.1823, device='cuda:0')
Got 8652/10000 correct (86.52%) on the clean data
Got 8337/10000 correct (83.37%) on the clean data
